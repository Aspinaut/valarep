{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/vmasse/Code/valarep/vincent/React2/secondapp/src/Users.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nvar faker = require('faker');\n\nconst Users = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [newUserLastName, setNewUserLastName] = useState('');\n  const [newUserFirstName, setNewUserFirstName] = useState('');\n\n  for (let i = 0; i < 25; i++) {\n    const fetchUsers = async () => {\n      const data = await [{\n        id: i,\n        lastName: faker.name.lastName(),\n        firstName: faker.name.firstName()\n      }, setUsers(data)];\n    };\n  }\n\n  useEffect(() => {\n    fetchUsers().then(r => '');\n  }, []);\n\n  const handleChangeNom = ({\n    currentTarget\n  }) => {\n    setNewUserLastName(currentTarget.value);\n  };\n\n  const handleChangePrénom = ({\n    currentTarget\n  }) => {\n    setNewUserFirstName(currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const id = new Date().getTime();\n    const lastName = newUserLastName;\n    const firstName = newUserFirstName;\n    const copieUsers = [...users];\n    copieUsers.push({\n      id,\n      lastName,\n      firstName\n    });\n    setUsers(copieUsers);\n    setNewUserFirstName('');\n    setNewUserLastName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste d'utilisateurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.lastName, \" \", user.firstName]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"Pr\\xE9nom : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newUserFirstName,\n        onChange: handleChangePrénom,\n        type: \"text\",\n        name: \"firstName\",\n        id: \"firstName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        Style: \"margin-left:1em\",\n        htmlFor: \"lastName\",\n        children: \"Nom : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newUserLastName,\n        onChange: handleChangeNom,\n        type: \"text\",\n        name: \"lastName\",\n        id: \"lastName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        Style: \"margin-left:1em\",\n        children: \"Valider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Users, \"hE79sBYphAfg63mY98bupnVE5IE=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/vmasse/Code/valarep/vincent/React2/secondapp/src/Users.jsx"],"names":["React","useEffect","useState","faker","require","Users","users","setUsers","newUserLastName","setNewUserLastName","newUserFirstName","setNewUserFirstName","i","fetchUsers","data","id","lastName","name","firstName","then","r","handleChangeNom","currentTarget","value","handleChangePrénom","handleSubmit","event","preventDefault","Date","getTime","copieUsers","push","map","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nvar faker = require('faker');\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [newUserLastName, setNewUserLastName] = useState('');\r\n    const [newUserFirstName, setNewUserFirstName] = useState('');\r\n\r\n    for (let i=0; i <25; i++){\r\n      const fetchUsers = async () => {\r\n        const data = await [\r\n            {id: i, lastName: faker.name.lastName(), firstName: faker.name.firstName() },\r\n            setUsers(data)\r\n        ];\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUsers().then(r => '');\r\n    }, []);\r\n\r\n    const handleChangeNom = ({ currentTarget }) => {\r\n        setNewUserLastName(currentTarget.value);\r\n    }\r\n\r\n    const handleChangePrénom = ({ currentTarget }) => {\r\n        setNewUserFirstName(currentTarget.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const id = new Date().getTime();\r\n        const lastName = newUserLastName;\r\n        const firstName = newUserFirstName;\r\n\r\n        const copieUsers = [...users];\r\n        copieUsers.push({id, lastName, firstName});\r\n\r\n        setUsers(copieUsers);\r\n        setNewUserFirstName('');\r\n        setNewUserLastName('');\r\n    }\r\n\r\n    return <>\r\n        <h1>Liste d'utilisateurs</h1>\r\n        <ul>\r\n            {users.map(user =>\r\n                <li key={user.id}>{user.lastName} {user.firstName}</li>\r\n            )}\r\n        </ul>\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"firstName\">Prénom : </label>\r\n            <input value={newUserFirstName} onChange={handleChangePrénom} type=\"text\" name=\"firstName\" id=\"firstName\" />\r\n            <label Style=\"margin-left:1em\" htmlFor=\"lastName\">Nom : </label>\r\n            <input value={newUserLastName} onChange={handleChangeNom} type=\"text\" name=\"lastName\" id=\"lastName\" />\r\n            <button Style=\"margin-left:1em\">Valider</button>\r\n        </form>\r\n        <br />\r\n    </>\r\n}\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}